/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package eu.diversify.ffbpg.gui;

import eu.diversify.ffbpg.BPGraph;
import eu.diversify.ffbpg.Simulation;
import eu.diversify.ffbpg.utils.FileUtils;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Future;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.ProgressMonitor;
import org.thingml.rtcharts.swing.*;

/**
 *
 * @author ffl
 */
public class SimulationsFrame extends javax.swing.JFrame {

    SimulationTableModel simulations = new SimulationTableModel();
    
    protected GraphBuffer avg_robustness = new GraphBuffer(10); // Empty graph
    
    public void addSimulation(Simulation s) {
        simulations.add(s);
    }
    
    /**
     * Creates new form SimulationsFrame
     */
    public SimulationsFrame() {
        initComponents();
        
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setMultiSelectionEnabled(false);
        jTextFieldFolder.setText(prefs.get("DataFolder", ""));
        File folder = new File(jTextFieldFolder.getText());
        
        jTextFieldName.setText(new SimpleDateFormat("yyyyMMddhhmmss").format(new Date()));
        
    }
    
     @Override
     public void dispose()  {
         System.out.println("Begin Finilize: " + Runtime.getRuntime().freeMemory() + " Memory Free");
         this.simulations = null;
         this.avg_robustness = null;
         System.gc();
         System.out.println("After Finilize: " + Runtime.getRuntime().freeMemory() + " Memory Free");
         super.dispose();
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldFolder = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldThreads = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldSteps = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanelGraphRobustness = new LineGraphPanel(avg_robustness, "Average robustness", 250, 550, 100, new java.awt.Color(0, 153, 255));
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSelectedStep = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Open Selected...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Export Averages");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setText("Experiment Name:");

        jLabel3.setText("Data Folder:");

        jTextFieldName.setText("Noname");

        jButton4.setText("Browse...");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("# Threads:");

        jTextFieldThreads.setText("4");

        jButton3.setText("RUN !");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel2.setText("# Steps:");

        jTextFieldSteps.setText("100");

        jTable1.setModel(simulations);
        jScrollPane1.setViewportView(jTable1);

        jScrollPane2.setViewportView(jScrollPane1);

        jLabel5.setText("Step :");

        jTextFieldSelectedStep.setText("0");

        jButton5.setText("Open Models...");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Export All Graphs");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldFolder)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextFieldName)))
                    .addComponent(jPanelGraphRobustness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldSelectedStep, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldThreads, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldSteps, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton4)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jTextFieldFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextFieldSteps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldThreads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelGraphRobustness, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jTextFieldSelectedStep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5)
                            .addComponent(jButton2)
                            .addComponent(jButton6))))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    JFileChooser chooser = new JFileChooser();
    Preferences prefs = Preferences.userRoot().node("BPGraphFrame");
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        File folder = new File(jTextFieldFolder.getText());
        if (folder.exists() && folder.isDirectory()) {
            chooser.setSelectedFile(folder);
        }
        if (chooser.showDialog(this, "OK") == JFileChooser.APPROVE_OPTION) {
            jTextFieldFolder.setText(chooser.getSelectedFile().getAbsolutePath());
            prefs.put("DataFolder", folder.getAbsolutePath());
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void initializeGraph() {

        int current_step = simulations.getData().get(0).getSteps().size();
        int new_steps = Integer.parseInt(jTextFieldSteps.getText());
        
        // Set the correct size for the data buffer
        avg_robustness.setGraphData(new int[current_step + new_steps]);
        avg_robustness.resetBuffer();
        
        // Put in the data for the already calculated steps:
        for (int i = 0; i<current_step; i++) {
            int avg = 0;
            for (Simulation s : simulations.getData()) {
                avg += s.computeRobustnessExtinctionSequences(s.getSteps().get(i));
            }
            avg /= simulations.getData().size();
            avg_robustness.insertData(avg);
        }
        
        ((GraphPanel) jPanelGraphRobustness).setYmax(550);
        ((GraphPanel) jPanelGraphRobustness).setYmin(250);
        ((GraphPanel) jPanelGraphRobustness).setYminor(100);
        ((GraphPanel) jPanelGraphRobustness).setXminor(25);

        ((GraphPanel) jPanelGraphRobustness).redrawGraph();
    }
    
    private void updateGraph(int newValue) {
        avg_robustness.insertData(newValue);
        ((GraphPanel) jPanelGraphRobustness).redrawGraph();
    }
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // Run the simulation for a number of steps.
        
        final int nb_steps = Integer.parseInt(jTextFieldSteps.getText());
        final ProgressMonitor progressMonitor = new ProgressMonitor(this,
                                      "Simulating Bi-Partite Graph Evolution",
                                      "", 0, nb_steps);
       
                progressMonitor.setMillisToPopup(500);
        
                 Thread queryThread = new Thread() {
                    public void run() {
                
                        initializeGraph();
                        
                        ExecutorService executor =  java.util.concurrent.Executors.newFixedThreadPool(Integer.parseInt(jTextFieldThreads.getText()));



                        ArrayList<ExecuteOneSimulationStep> commands = new ArrayList<ExecuteOneSimulationStep>();

                        for (Simulation s : simulations.getData()) { 
                            commands.add(new ExecuteOneSimulationStep(s));
                        }

                        List<Future<Integer>> results;
                        
                        for (int i = 0; i<nb_steps; i++) {

                            System.out.println("Running simulation step " + i + "(on " + commands.size() +" simulations)");
                            int average = 0;
                            try {
                                results = executor.invokeAll(commands);
                                average = 0;
                                for (Future<Integer> r : results) average += r.get();
                                average /= results.size();
                                
                            } catch (Exception ex) {
                                Logger.getLogger(SimulationsFrame.class.getName()).log(Level.SEVERE, null, ex);
                            }
                
                            final int progress = i+1;
                            final int newValue = average;
                            java.awt.EventQueue.invokeLater(new Runnable() {    
                                public void run() {
                                   progressMonitor.setProgress(progress);
                                   simulations.fireTableDataChanged();
                                   updateGraph(newValue);
                               }});
                            
                            if (progressMonitor.isCanceled()) break;
               
                        }}};
                queryThread.start();
            
            
        
        
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if (jTable1.getSelectedRow() < 0) return;
        
        Simulation selected = simulations.getData().get(jTable1.getSelectedRow());
        
        BPGraphFrame f = new BPGraphFrame();
        f.setVisible(true);    
        String log = selected.getSim_parameters();
        f.setSimulation(selected);
        
    }//GEN-LAST:event_jButton1ActionPerformed

     public File getDataFolder() {
        File folder = new File(jTextFieldFolder.getText());
        if (!folder.exists() || !folder.isDirectory()) {
            if (chooser.showDialog(this, "OK") == JFileChooser.APPROVE_OPTION) {
                if (!chooser.getSelectedFile().exists() || !chooser.getSelectedFile().isDirectory()) {
                    JOptionPane.showMessageDialog(null, "Please select an existing folder.", "Folder not found", JOptionPane.ERROR_MESSAGE);
                    return null;
                }
                jTextFieldFolder.setText(chooser.getSelectedFile().getAbsolutePath());
                folder = chooser.getSelectedFile();
            } else {
                return null; // abort
            }
        }
        prefs.put("DataFolder", folder.getAbsolutePath());
        File subfolder = new File(folder, jTextFieldName.getText().replaceAll("\\W+", ""));
        if (!subfolder.exists()) subfolder.mkdirs();
        //FileUtils.writeTextFile(subfolder, "Parameters.txt", jTextAreaParams.getText());
        return subfolder;
    }

    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        final File folder = getDataFolder();
        if (folder == null) return;

        //Export graphs for the average evolution of robustness
        int nb_steps = simulations.getData().get(0).getSteps().size();
        int nb_simulations = simulations.getData().size();
        int[][] robusness = new int[nb_simulations][nb_steps];
        for (int i=0; i<nb_simulations; i++) {
            for (int j=0; j<nb_steps; j++) {
                Simulation s = simulations.getData().get(i);
                robusness[i][j] = s.computeRobustnessExtinctionSequences(s.getSteps().get(j));
            }
        }
        BPGraph.writeGNUPlotScriptForData(robusness, folder, "avg_robusness_evolution");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        int nb_steps = simulations.getData().get(0).getSteps().size();
        int selected_step = Integer.parseInt(jTextFieldSelectedStep.getText());
        ArrayList<BPGraph> models = new ArrayList<BPGraph>();
        for (Simulation s : simulations.getData()) {
            models.add(s.getSteps().get(selected_step));
        }
        BPGraphFrame f = new BPGraphFrame();
        f.setVisible(true);    
        String log = "Simulation step " + selected_step;
        f.setBPGraphCollection(models, 0, log);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        final File folder = getDataFolder();
        if (folder == null) return;
        
        // For each simulation
        for ( int si=0; si < simulations.getData().size(); si++) {
            Simulation s = simulations.getData().get(si);
            // Get the graph for each step
            for (int gi=0; gi < s.getSteps().size(); gi++) {
                BPGraph g = s.getSteps().get(gi);
                // Export the graph in a text file
                FileUtils.writeTextFile(folder, "Graph_" + si + "_" + gi, g.serialize_txt());
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    public class ExecuteOneSimulationStep implements Callable<Integer> {

        Simulation simulation;
        
        public ExecuteOneSimulationStep(Simulation s) {
            simulation = s;
        }
        
	@Override
	public Integer call() throws Exception {
                Integer result = 0;
		try {	
			BPGraph g = simulation.run_step();
                        result = simulation.computeRobustnessExtinctionSequences(g);
		} 
		catch (Exception e) {
			e.printStackTrace();
		}
                return result;
	}

}
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanelGraphRobustness;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldFolder;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldSelectedStep;
    private javax.swing.JTextField jTextFieldSteps;
    private javax.swing.JTextField jTextFieldThreads;
    // End of variables declaration//GEN-END:variables
}
